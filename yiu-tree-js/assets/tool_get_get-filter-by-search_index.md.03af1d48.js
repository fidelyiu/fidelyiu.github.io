import{_ as s,c as l,o as n,a}from"./app.9a4a6452.js";const i=JSON.parse('{"title":"根据条件搜索树","description":"","frontmatter":{"title":"根据条件搜索树"},"headers":[{"level":2,"title":"方法使用","slug":"方法使用","link":"#方法使用","children":[]},{"level":2,"title":"方法描述","slug":"方法描述","link":"#方法描述","children":[]},{"level":2,"title":"配置说明","slug":"配置说明","link":"#配置说明","children":[]}],"relativePath":"tool/get/get-filter-by-search/index.md","lastUpdated":1679295557000}'),e={name:"tool/get/get-filter-by-search/index.md"},t=a(`<h1 id="根据条件搜索树" tabindex="-1">根据条件搜索树 <a class="header-anchor" href="#根据条件搜索树" aria-hidden="true">#</a></h1><h2 id="方法使用" tabindex="-1">方法使用 <a class="header-anchor" href="#方法使用" aria-hidden="true">#</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">getFilterBySearch</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">yiu-tree</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> tree </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">id</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">children</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">id</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">1-1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">children</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">id</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">1-1-1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">},</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">id</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">1-1-2</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">] </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">id</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">1-2</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">id</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">1-3</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> ]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">id</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">children</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">id</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">2-1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">] </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">id</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">id</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">]</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> result </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">getFilterBySearch</span><span style="color:#A6ACCD;">(tree</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">node</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> node</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">id </span><span style="color:#89DDFF;">===</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">过滤结果 :&gt;&gt; </span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">result</span><span style="color:#89DDFF;">}\`</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><h2 id="方法描述" tabindex="-1">方法描述 <a class="header-anchor" href="#方法描述" aria-hidden="true">#</a></h2><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">getFilterBySearch(tree, searchFunc, [opt])</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>方法默认开启深拷贝。</p><p>根据传入的搜索方法返回负荷条件的树。</p><ul><li><code>NodeType</code>: <code>T</code></li><li><code>getFilterBySearch&lt;T&gt;</code>: 泛型支持传入你定义的节点类型</li><li><code>tree</code>: <ul><li>类型: <code>T[]</code></li><li>说明: 传入的树数据</li></ul></li><li><code>searchFunc</code>: <ul><li>类型: <code>(node: T, [nodeInfo: TreeNodeInfo&lt;T&gt;]) =&gt; boolean</code></li><li>说明: 搜索函数</li></ul></li><li><code>opt</code>: <ul><li>类型: <code>TreeFilterOpt&lt;T&gt;</code></li><li>说明: 过滤配置</li></ul></li></ul><h2 id="配置说明" tabindex="-1">配置说明 <a class="header-anchor" href="#配置说明" aria-hidden="true">#</a></h2><p>在<code>TreeFilterOpt</code>中有两项配置对于过滤来说很重要：</p><table><thead><tr><th style="text-align:center;">参数名称</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th><th style="text-align:center;">说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>parentMatch</code></td><td style="text-align:center;"><code>boolean</code></td><td style="text-align:center;"><code>false</code></td><td style="text-align:center;">父节点是否需要匹配</td></tr><tr><td style="text-align:center;"><code>childrenMatch</code></td><td style="text-align:center;"><code>boolean</code></td><td style="text-align:center;"><code>true</code></td><td style="text-align:center;">子节点是否需要匹配</td></tr></tbody></table><p>二者搭配出来的过滤效果如下：</p><table><thead><tr><th style="text-align:center;"><code>parentMatch</code></th><th style="text-align:center;"><code>childrenMatch</code></th><th style="text-align:center;">说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>false</code></td><td style="text-align:center;"><code>false</code></td><td style="text-align:center;">当一个节点匹配搜索函数后，将忽略其父节点、子节点、子孙节点的匹配结果</td></tr><tr><td style="text-align:center;"><code>false</code></td><td style="text-align:center;"><code>true</code></td><td style="text-align:center;">当一个节点匹配搜索函数后，将忽略其父节点的匹配结果</td></tr><tr><td style="text-align:center;"><code>true</code></td><td style="text-align:center;"><code>true</code></td><td style="text-align:center;">所有节点都会进行函数匹配</td></tr><tr><td style="text-align:center;"><code>true</code></td><td style="text-align:center;"><code>false</code></td><td style="text-align:center;">当一个节点匹配搜索函数后，其所有子节点、子孙节点都会匹配</td></tr></tbody></table>`,13),o=[t];function p(c,r,y,D,d,C){return n(),l("div",null,o)}const A=s(e,[["render",p]]);export{i as __pageData,A as default};
